# ============================================================
# Modul: Dev-TestMenu.ps1
# Version: MOD_V1.1.1
# Zweck:   Testet alle Hauptfunktionen der Library Lib_Menu.ps1 inkl. Pfad- und Systeminformationen
# Autor:   Herbert Schrotter
# Datum:   22.10.2025
# ============================================================
# ManifestHint:
#   ExportFunctions: Test-MenuSystem
#   Description: Entwicklertest f√ºr Lib_Menu.ps1 mit Integration von Lib_PathManager (Pfad- & Systemdiagnose)
#   Category: Dev
#   Tags: Menu, PathManager, Test, Framework, Diagnostic
#   Dependencies: Lib_Menu.ps1, Lib_PathManager.ps1
# ============================================================

# ------------------------------------------------------------
# üîß Library Lib_Menu.ps1 laden (inkl. PathManager)
# ------------------------------------------------------------
try {
    $libPath = "$PSScriptRoot\..\..\Libs\Lib_Menu.ps1"
    if (Test-Path $libPath) {
        . $libPath
        Write-Host "‚úÖ Lib_Menu.ps1 erfolgreich geladen." -ForegroundColor Green
    }
    else {
        throw "‚ùå Library nicht gefunden unter: $libPath"
    }
}
catch {
    Write-Host $_.Exception.Message -ForegroundColor Red
    exit
}

# ------------------------------------------------------------
# üß≠ System- & Pfadinfos ausgeben (von PathManager)
# ------------------------------------------------------------
try {
    $pathMap = Get-PathMap
    $activeSystem = Get-ActiveSystem

    Write-Host "`n============================================" -ForegroundColor Cyan
    Write-Host "üîç LIB-STATUS & SYSTEMINFORMATION" -ForegroundColor Yellow
    Write-Host "============================================" -ForegroundColor Cyan

    Write-Host "üì¶ Lib_Menu-Version     : LIB_V1.5.2" -ForegroundColor White
    Write-Host "üì¶ Lib_PathManager-Ver. : LIB_V1.2.3" -ForegroundColor White
    Write-Host ("üë§ Benutzer             : " + $activeSystem.Benutzer) -ForegroundColor Gray
    Write-Host ("üíª Computer             : " + $activeSystem.Computer) -ForegroundColor Gray
    Write-Host ("üìÅ Root-Path            : " + $activeSystem.Root) -ForegroundColor Gray
    Write-Host "`nüìÇ AKTIVE PFADZUORDNUNG:" -ForegroundColor Yellow
    foreach ($prop in $pathMap.PSObject.Properties) {
        Write-Host ("   " + $prop.Name.PadRight(12) + ": " + $prop.Value) -ForegroundColor DarkGray
    }
    Write-Host "============================================" -ForegroundColor Cyan

    Write-Host "`n‚è∏Ô∏è  Weiter mit [ENTER], um die Men√ºtests zu starten ..." -ForegroundColor Magenta
    Read-Host | Out-Null
}
catch {
    Write-Host "‚ö†Ô∏è Konnte Pfad-/Systeminfos nicht abrufen: $($_.Exception.Message)" -ForegroundColor Yellow
}

# ------------------------------------------------------------
# üß™ Test 1: Einfaches Men√º mit zwei Optionen
# ------------------------------------------------------------
$options1 = @{
    "1" = "Aktion 1 ausf√ºhren|Write-Host 'Testaktion 1 wurde ausgef√ºhrt.' -ForegroundColor Cyan"
    "2" = "Aktion 2 ausf√ºhren|Write-Host 'Testaktion 2 wurde ausgef√ºhrt.' -ForegroundColor Cyan"
}
Show-SubMenu -MenuTitle "Test 1 ‚Äì Einfaches Men√º" -Options $options1 -ReturnAfterAction

# ------------------------------------------------------------
# üß™ Test 2: Men√º mit Untermen√º (verschachtelt, auto-erkennung)
# ------------------------------------------------------------
$optionsSub = @{
    "1" = "Untermen√º-Option 1|Write-Host 'Untermen√º Aktion 1' -ForegroundColor Yellow"
    "2" = "Untermen√º-Option 2|Write-Host 'Untermen√º Aktion 2' -ForegroundColor Yellow"
    "3" = "Zur√ºck zum Hauptmen√º|return '0'"
}

$options2 = @{
    "1" = "Untermen√º √∂ffnen|Show-SubMenu -MenuTitle 'Untermen√º ‚Äì Test 2' -Options `$optionsSub"
    "2" = "Hauptaktion|Write-Host 'Hauptaktion wurde ausgef√ºhrt.' -ForegroundColor Magenta"
    "3" = "Weitere Aktion|Write-Host 'Dritte Testaktion im Hauptmen√º' -ForegroundColor Cyan"
}
Show-SubMenu -MenuTitle "Test 2 ‚Äì Men√º mit Untermen√º" -Options $options2

# ------------------------------------------------------------
# üß™ Test 3: DebugMode-Erkennung & Fehlerbehandlung
# ------------------------------------------------------------
$options3 = @{
    "1" = "Fehler provozieren|throw 'Beispielhafter Testfehler'"
    "2" = "Normale Aktion|Write-Host 'Aktion erfolgreich ausgef√ºhrt.' -ForegroundColor Green"
}
Show-SubMenu -MenuTitle "Test 3 ‚Äì DebugMode & Fehler" -Options $options3

# ------------------------------------------------------------
# üèÅ Testabschluss
# ------------------------------------------------------------
Write-Host "`n============================================" -ForegroundColor Cyan
Write-Host "‚úÖ Alle Men√ºtests abgeschlossen." -ForegroundColor Green
Write-Host "============================================" -ForegroundColor Cyan
Pause
